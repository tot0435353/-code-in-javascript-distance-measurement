<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Distance Measurement</title>
</head>
<body>
    <h1>Distance Measurement</h1>

    <p>Latitude and Longitude for Location 1:</p>
    <label for="lat1">Latitude:</label>
    <input type="text" id="lat1" placeholder="Enter latitude">
    <label for="lon1">Longitude:</label>
    <input type="text" id="lon1" placeholder="Enter longitude">

    <p>Latitude and Longitude for Location 2:</p>
    <label for="lat2">Latitude:</label>
    <input type="text" id="lat2" placeholder="Enter latitude">
    <label for="lon2">Longitude:</label>
    <input type="text" id="lon2" placeholder="Enter longitude">

    <button onclick="calculateDistance()">Calculate Distance</button>
    <p id="distanceResult"></p>

    <script>
        function calculateDistance() {
            const lat1 = parseFloat(document.getElementById('lat1').value);
            const lon1 = parseFloat(document.getElementById('lon1').value);
            const lat2 = parseFloat(document.getElementById('lat2').value);
            const lon2 = parseFloat(document.getElementById('lon2').value);

            if (isNaN(lat1) || isNaN(lon1) || isNaN(lat2) || isNaN(lon2)) {
                alert('Please enter valid coordinates.');
                return;
            }

            const distance = haversine(lat1, lon1, lat2, lon2);

            document.getElementById('distanceResult').innerText = `Distance: ${distance.toFixed(2)} km`;
        }

        function haversine(lat1, lon1, lat2, lon2) {
            const R = 6371; // Radius of the Earth in kilometers
            const dLat = toRadians(lat2 - lat1);
            const dLon = toRadians(lon2 - lon1);

            const a =
                Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) *
                Math.sin(dLon / 2) * Math.sin(dLon / 2);

            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));

            return R * c;
        }

        function toRadians(degrees) {
            return degrees * (Math.PI / 180);
        }
    </script>
</body>
</html>
